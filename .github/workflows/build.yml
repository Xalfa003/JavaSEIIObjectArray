name: Build and deploy

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  packages: read

env:
  CI_REGISTRY: ghcr.io
  CI_REGISTRY_USER: ${{ github.actor }}
  IMAGE_NAME: 1-pf/javaSEII

jobs:
  version:
    if: github.ref == 'refs/heads/master'
    name: Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Version
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: maven
          package-name: javaSEII

  docker_build:
    name: Build docker image
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        env:
          IMAGE_FULL_NAME: ${{ env.CI_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        run: |
          docker build -t ${{ env.IMAGE_FULL_NAME }} .
          docker push ${{ env.IMAGE_FULL_NAME }}

  deploy:
    if: ${{ github.event.head_commit.author.username == 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.TEST_SERVER_NAME }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.TEST_SERVER_KEY }}
          script: |
            cd /var/javaSEII
            echo ${{ secrets.GITHUB_TOKEN }} | docker login --username ${{env.CI_REGISTRY_USER}} --password-stdin ${{ env.CI_REGISTRY }}
            previous_image=$(docker images javaSEII:latest -qa)
            docker pull ${{ env.CI_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker tag ${{ env.CI_REGISTRY }}/${{ env.IMAGE_NAME }}:latest javaSEII:latest
            docker rmi ${{ env.CI_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker compose up -d --build application 
            docker rmi $previous_image